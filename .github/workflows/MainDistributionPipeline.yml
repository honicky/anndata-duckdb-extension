#
# This workflow calls the main distribution pipeline from DuckDB to build, test and (optionally) release the extension
#
name: Main Extension Distribution Pipeline
on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' && github.sha || '' }}
  cancel-in-progress: true

jobs:
  duckdb-next-build:
    name: Build extension binaries
    uses: duckdb/extension-ci-tools/.github/workflows/_extension_distribution.yml@main
    if: false   # extension-template is currently not compatible with main
    with:
      duckdb_version: main
      ci_tools_version: main
      extension_name: anndata

  duckdb-stable-build:
    name: Build extension binaries
    uses: duckdb/extension-ci-tools/.github/workflows/_extension_distribution.yml@v1.3.2
    with:
      duckdb_version: v1.3.2
      ci_tools_version: v1.3.2
      extension_name: anndata

  code-quality-check:
    name: Code Quality Check
    uses: duckdb/extension-ci-tools/.github/workflows/_extension_code_quality.yml@main
    with:
      duckdb_version: v1.3.2
      ci_tools_version: main
      extension_name: anndata
      format_checks: 'format;tidy'

  # Deploy the extension binaries to S3 or GitHub releases
  # Note: Without AWS credentials, this will skip S3 deployment
  # Only runs on version tags to avoid duplicate deployments
  duckdb-stable-deploy:
    name: Deploy extension binaries
    needs: duckdb-stable-build
    if: startsWith(github.ref, 'refs/tags/v')
    uses: duckdb/extension-ci-tools/.github/workflows/_extension_deploy.yml@v1.3.2
    secrets: inherit
    with:
      duckdb_version: v1.3.2
      ci_tools_version: v1.3.2
      extension_name: anndata
      deploy_latest: ${{ startsWith(github.ref, 'refs/tags/v') }}
      deploy_versioned: ${{ startsWith(github.ref, 'refs/tags/v') }}
  
  # Create GitHub Release with the built artifacts
  create-github-release:
    name: Create GitHub Release
    needs: duckdb-stable-build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Get version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Generate release notes
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          awk "/## \[${VERSION}\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > notes.md || echo "Release ${VERSION}" > notes.md
          
          cat >> notes.md << 'EOF'
          
          ## Installation
          
          Extensions are available as GitHub Actions artifacts. 
          Download from the Actions tab for this release build.
          
          ```sql
          duckdb -unsigned
          LOAD 'path/to/anndata.duckdb_extension';
          ```
          EOF
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
